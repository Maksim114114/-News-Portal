1.	Создать двух пользователей (с помощью метода User.objects.create_user('username')).
cashier1= User.objects.create_user(Иванов Иван Иванович)
cashier1= User.objects.create_user(Петров Петр Петрович)
cashier1= User.objects.create_user(Максимов Максим Максимович)
cashier1= User.objects.create_user(Иванов Иван)

2.	Создать два объекта модели Author, связанные с пользователями.
Author.objects.create(author_rating = 1,author_user=User.objects.get(id=1))
Author.objects.create(author_rating = 1,author_user=User.objects.get(id=2))
3.	Добавить 4 категории в модель Category.
categoty1 = Category.objects.create(name_category="Business")
categoty1 = Category.objects.create(name_category="IT")
categoty1 = Category.objects.create(name_category="Auto")
categoty1 = Category.objects.create(name_category="Games")

4.	Добавить 2 статьи и 1 новость.
Post.objects.create(post_author=Author.objects.get(id=1), event="papers", title="Пёс не хочет расставаться с пакетом чипсов",post_text="Пёс, сидя у телевизора, проводит свой досуг с пачкой чипсов, но неугомонная хозяйка почему-то решила, что чипсы — это только человеческое лакомство, и настырно пытается отобрать их. Что ж, пускай попробует рискнуть.")

Post.objects.create(post_author=Author.objects.get(id=2), event="papers", title="В России заблокировали «Твиттер» (он же «Х»), но наш специальный корреспондент из-за рубежа продолжает присылать нам самые удачные твиты дня. ",post_text="Как так получилось что “Фуксия”- это цвет ? Фуксия это раздраженная тетка с кандибобером.Типа как фурия ,только не ляпая")
Post.objects.create(post_author=Author.objects.get(id=1), event="news", title=" Филиппинские студенты сдают экзамены в «анти-списывательных шлемах ", post_text=" Колледж в городе Легаспи ввел новое правило против списывания — во время контрольных работ ученики должны надевать головные уборы, которые помешают им заглядывать в чужие тетради. При этом учащимся предоставили полную свободу в выборе этих самых «анти-списывательных шлемов», и теперь студенты отрываются на всю катушку.")

5.	Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий).
Post.objects.get(id=6).categories.add(Category.objects.get(id=1))				
Post.objects.get(id=7).categories.add(Category.objects.get(id=3))				
Post.objects.get(id=8).categories.add(Category.objects.get(id=2))				

6.	Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий).
Comment.objects.create(comment_post=Post.objects.get(id=6),comment_user=Author.objects.get(id=2).author_user,comment_text="Хорошая работа")
Comment.objects.create(comment_post=Post.objects.get(id=7),comment_user=Author.objects.get(id=1).author_user,comment_text="Как-то диагонально")
Comment.objects.create(comment_post=Post.objects.get(id=8),comment_user=Author.objects.get(id=1).author_user,comment_text="паралейно") 
Comment.objects.create(comment_post=Post.objects.get(id=7),comment_user=Author.objects.get(id=1).author_user,comment_text="не интерес") 

7.	Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.
Post.objects.get(id=6).like_post()		
Post.objects.get(id=6).like_post()		
Post.objects.get(id=7).like_post()		
Post.objects.get(id=7).like_post()		
Post.objects.get(id=7).like_post()		
Post.objects.get(id=8).dislike_post()		
Post.objects.get(id=10).dislike_post()		
Post.objects.get(id=10).dislike_post()		
Post.objects.get(id=6).post_rating		
Post.objects.get(id=7).post_rating		
Post.objects.get(id=8).post_rating		
Post.objects.get(id=10).post_rating		
Comment.objects.get(id=1).like_comment()		
Comment.objects.get(id=2).like_comment()		
Comment.objects.get(id=3).like_comment()		
Comment.objects.get(id=3).like_comment()		
Comment.objects.get(id=4).dislike_comment()		
Comment.objects.get(id=4).dislike_comment()		
Comment.objects.get(id=4).dislike_comment()		
Comment.objects.get(id=1).comment_rating		
Comment.objects.get(id=2).comment_rating		
Comment.objects.get(id=3).comment_rating		
Comment.objects.get(id=4).comment_rating		

8.	Обновить рейтинги пользователей.
Author.objects.get(id=1).update_rating()			обновить 
Author.objects.get(id=2).update_rating()			
Author.objects.get(id=1).author_rating			вывести 
Author.objects.get(id=2).author_rating			

9.	Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта).
Author.objects.all().order_by('-author_rating').values('author_user__username', 'author_rating')[0]
10.	Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье.
q=1 
list10 = [Author.objects.get(id=q).author_user.date_joined, Author.objects.get(id=q).author_user.username, Author.objects.get(id=q).author_rating, Post.objects.filter(post_author = Author.objects.get(id=q)).order_by('-post_rating').first().title ]
list10
11.	Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.
Post.objects.all().order_by('-post_rating')[0].comment_set.values('time_in_comment', 'comment_user', 'comment_rating', 'comment_text')

